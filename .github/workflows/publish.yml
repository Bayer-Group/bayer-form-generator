name: Publish to Artifactory

on:
  workflow_dispatch:

permissions:
  contents: "write"
  id-token: "write"

jobs:
  test:
    runs-on: [self-hosted, Linux, external-k8s]
    environment: "non_production"

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # Taken from https://github.com/AutoModality/action-clean (felt too small to include as an action)
      - name: Clean Workspace Files
        run: |
          set -e # fail on error
          shopt -s dotglob
          sudo rm -rf *

      - name: Checking out from GitHub
        uses: actions/checkout@v3

      - name: Configure NPM
        env:
          ARTIFACTORY_TOKEN: ${{secrets.ARTIFACTORY_AUTH}}
        run: |
          npm config set registry https://registry.npmjs.org/
          npm config set @monsantoit:registry https://artifactory.bayer.com/artifactory/api/npm/npm-platforms-engineering/
          npm config set @bayerit:registry https://artifactory.bayer.com/artifactory/api/npm/npm-platforms-engineering/
          npm config set @element:registry https://artifactory.bayer.com/artifactory/api/npm/npm-platforms-engineering/
          npm config set //artifactory.bayer.com/artifactory/api/npm/npm-platforms-engineering/:_password $ARTIFACTORY_TOKEN
          npm config set //artifactory.bayer.com/artifactory/api/npm/npm-platforms-engineering/:username discoverylab-formgenerator
          npm config set //artifactory.bayer.com/artifactory/api/npm/npm-platforms-engineering/:email cathy.richards@bayer.com

      - name: Install Dependencies
        run: npm ci

      - name: Run Linter
        run: npm run lint

      - name: Running Unit Tests
        run: npm run test

  publish:
    runs-on: [self-hosted, Linux, external-k8s]
    environment: "non_production"
    needs: test
    env:
      INPUT_TOKEN: ${{ secrets.ARTIFACTORY_AUTH }}

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # Taken from https://github.com/AutoModality/action-clean (felt too small to include as an action)
      - name: Clean Workspace Files
        run: |
          set -e # fail on error
          shopt -s dotglob
          sudo rm -rf *

      - name: Checking out from GitHub
        uses: actions/checkout@v3

      - name: Configure NPM
        env:
          ARTIFACTORY_TOKEN: ${{secrets.ARTIFACTORY_AUTH}}
        run: |
          npm config set registry https://registry.npmjs.org/
          npm config set @monsantoit:registry https://artifactory.bayer.com/artifactory/api/npm/npm-platforms-engineering/
          npm config set @bayerit:registry https://artifactory.bayer.com/artifactory/api/npm/npm-platforms-engineering/
          npm config set @element:registry https://artifactory.bayer.com/artifactory/api/npm/npm-platforms-engineering/
          npm config set //artifactory.bayer.com/artifactory/api/npm/npm-platforms-engineering/:_password $ARTIFACTORY_TOKEN
          npm config set //artifactory.bayer.com/artifactory/api/npm/npm-platforms-engineering/:username discoverylab-formgenerator
          npm config set //artifactory.bayer.com/artifactory/api/npm/npm-platforms-engineering/:email cathy.richards@bayer.com

      - name: Install Dependencies
        run: npm ci

      - name: Build for production
        run: npm run build

      - name: Pruning Dependencies for production
        run: npm prune --production

      - name: Set Latest Version
        id: get-version
        run: echo "version=$(node -e "console.log(require('./package.json').version);")" >> $GITHUB_OUTPUT

      #Tag and Update the version / prepare for new development
      - name: Git Config
        run: |
          git config user.name 'github-actions'
          git config user.email 'github-actions@github.com'

      - name: Echo Version To Be Published
        run: echo ${{ steps.get-version.outputs.version }}

      # - name: Publish to Artifactory
      #   run: npm publish

      - name: Publish package
        id: publish
        uses: JS-DevTools/npm-publish@v1
        with:
          registry: https://artifactory.bayer.com/artifactory/api/npm/npm-platforms-engineering/
          token: ${{secrets.ARTIFACTORY_AUTH}}

      - name: Git Tag
        run: |
          git tag v${{ steps.get-version.outputs.version }} -m 'Releasing ${{ steps.get-version.outputs.version }}'
          git push origin --follow-tags
          git push origin --tags

      - name: Version Bump
        run: |
          npm version patch --no-git-tag-version
          git commit -am 'Post NP Release Version Bump'
          git push origin main
